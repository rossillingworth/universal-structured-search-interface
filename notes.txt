
Names
-------------
maverick
malevolence
mivac

movic
movico
modviecon



TODO - do it in XSLt
------------------------
http://johannburkard.de/software/xsltjs/

is this a version of client side XSLt?
ie: XML -> xHTML

could it be replaced by client side XSLt?
ie: XML -> xHTML, +grab bindings, set events.

Could this be a CMS?
runs on either server or client?


Stuff to do
-------
TODO - for PROD: nodeJS compile HTML templates to Javascript Functions in CACHE
 - put all templates in a folder, cache name is template name minus .js

TODO - Add MPS DSL for templates inside Intellij
 - allow script editing in templates properly...!
 - this would be the killer feature!

TODO - Language Injection
 - add Template expected VARs to template definition attributes
 - validate JSON data object against expectations??


TODO - stop js compiler error by registering func in compiler...!
--------------------------------------------------------------------
http://confluence.jetbrains.com/display/CONTEST/IntelliLang
--------------------------------------------------------------------
@Language(value = "JavaScript", prefix = "function doSomethingElse(a){ }")
String code = "function doSomething() {\n" +
"  var x = 1;\n" +
"  doSomethingElse(x);\n" +
"}";


TODO - MVC
-------------------------
Model - XML / JSON
View - Templates (local txt/html script element, remote file, pre-loaded func)
Controller - Object / Constructor
.......
allow logic in templates for dev
suggest move logic to Controllers for prod
Allow any template library to be replaced - as long as it compiles to a func
allow XML or JSON Model - modify templates & controllers to cope


Todo - Model API
-----------------
create API for accessing model,
which encapsulates XML vs JSON


Todo - check features
-----------------------------
http://www.bearfruit.org/2014/01/20/node-js-template-showdown-5-options-compared/


TODO - 9 patch SVG
-----------------------
build a configurable 9 patch SVG, ie: a button contanier


Todo - accessability?
--------------------------
how to make it accessable?


Idea
------

? templates for every XML tag -> completely custom HTML

? children tag in each template, used to contain child tags
ie: when parent is removed, removes all children
- if container is span, should wrap around well

? + SVG in templates, with HTML inside?
- allows totally custom components - but configurable

? + CANVAS in templates?
- same features as SVG?
- can I embed HTML inside Canvas ?

Canvas
=========
Resolution dependent
No support for event handlers
Poor text rendering capabilities
You can save the resulting image as .png or .jpg
Well suited for graphic-intensive games
? what browsers support this?

SVG
====
Resolution independent
Support for event handlers
Best suited for applications with large rendering areas (Google Maps)
Slow rendering if complex (anything that uses the DOM a lot will be slow)
Not suited for game applications
? what browsers support this?
- allowed - SVG in: img, CSS background,

NB:
-----
YOU CAN SAVE CANVAS AS PNG!!!



Maverick
===============

reserve NPM / bower names
push my small libs to NPM
move maverick to using require

translate templates to JSON definition
? extend cache with Template Object in initialisation ???

